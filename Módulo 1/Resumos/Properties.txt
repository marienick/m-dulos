Properties
-São definições de métodos encapsulados, porém expondo uma sintaxe similar à de atributos e não de métodos.
- Uma propriedade é um membro que oferece um mecanismo flexível para ler, gravar ou calcular o valor de um campo particular. As propriedades podem ser usadas como se fossem atributos públicos, mas na verdade elas são métodos especiais chamados "acessadores". Isso permite que os dados sejam acessados facilmente e ainda ajuda a promover a segurança e a flexibilidade dos métodos
EXEMPLO:
class Produto{
private string _nome;
private double _preco;
private int _quantidade;

public string Nome{
get {return _nome}
set {
	if(value != null){
		_nome = value;
	}

}
}
}
-Assim você pode acessar no main com p.Nome = "tv 4k";

AUTO PROPERTIES:
-É um forma simplificada de se declarar propriedades que não necessitam de lógicas particulares para as operações get e set.
EXEMPLO:
class Produto{
private string -nome;
public double Preco {get; private set;}
public int Quantidade {get; private set;}
}
(Se o atributo tiver uma condição não pode se usar a auto propertie, tem que usar a propertie normal, "public string Nome{ 
	set{
	if(nome != null){
		_nome = value;
	}
	}
	get{
		return _nome;
	}
}
)