PARAMS:
- Serve para que seja possível colocar infinitos parâmetros em uma função.
EXEMPLO:
classe Calculadora{
	public static Soma(params int[] numbers)
		for(int i = 0; i < numbers.Length; i++){
		soma += numbers[i];
		}
	}
}
class Program{
	int s1 = Calculadora.Soma(2,3,4,5);
	int s2 = (2,3,4);
}

REF:
- Faz com que a função não precise necessáriamente de um return caso ela queira alterar o parâmetro passado no escopo principal.
- Obriga que a variável seja iniciada.
EXEMPLO:
class Calculadora{
	public static void Triple(ref int x){
	x*=3;
	}
}
class Program{
	static void Main(string[] args){
		int a = 10;
	Calculadora.Triple(ref a);
(deste modo com esse modificador o a vai ser alterado após a chamada dessa função)
	}
}

OUT
- Faz o parâmetro ser uma referência para a variável original, mas não exige que a variável original seja iniciada.
EXEMPLO:
class Calculadora{
	public static void Triple(int origin, out int result){
		result = origin * 3;
	}
}
(aqui fala out tipo e nome do parâmetro)
class Program{
	static void Main(string[] args){
		int a = 10;
		int triple;
			Calculadora.Triple(a, out triple);
		Console.WriteLine(triple);
	}
}